using System;
using System.IO;
using System.Linq;
using FluentAssertions;
using NUnit.Framework;

namespace Markdown
{
    [TestFixture]
    public class Md_ShouldRender_Specification
    {


        [TestCase("Текст _окруженный с двух сторон_  одинарными символами подчерка \r\nдолжен помещаться в HTML-тег em вот так:",
            "Текст <em>окруженный с двух сторон</em>  одинарными символами подчерка \r\nдолжен помещаться в HTML-тег em вот так:")]

        [TestCase(@"Любой символ можно экранировать, чтобы он не считался частью разметки.\_Вот это\_, не должно выделиться тегом \<em\>.",
            @"Любой символ можно экранировать, чтобы он не считался частью разметки._Вот это_, не должно выделиться тегом <em>.")]

        [TestCase(@"__Двумя символами__ — должен становиться жирным с помощью тега \<strong\>.",
            @"<strong>Двумя символами</strong> — должен становиться жирным с помощью тега <strong>.")]

        [TestCase("Внутри __двойного выделения _одинарное_ тоже__ работает.",
            "Внутри <strong>двойного выделения <em>одинарное</em> тоже</strong> работает.")]

        [TestCase("Но не наоборот — внутри _одинарного __двойное__ не работает_.",
            "Но не наоборот — внутри <em>одинарного __двойное__ не работает</em>.")]

        [TestCase("Подчерки внутри текста c цифрами_12_3 не считаются выделением и должны оставаться символами подчерка.",
            "Подчерки внутри текста c цифрами_12_3 не считаются выделением и должны оставаться символами подчерка.")]

        [TestCase("__непарные _символы не считаются выделением.",
            "__непарные _символы не считаются выделением.")]

        [TestCase("За подчерками, начинающими выделение, должен следовать непробельный символ. Иначе эти_ подчерки_ не считаются выделением и остаются просто символами подчерка.",
            "За подчерками, начинающими выделение, должен следовать непробельный символ. Иначе эти_ подчерки_ не считаются выделением и остаются просто символами подчерка.")]

        [TestCase("Подчерки, заканчивающие выделение, должны следовать за непробельным символом. Иначе эти _подчерки _не считаются_ окончанием выделения и остаются просто символами подчерка.",
            "Подчерки, заканчивающие выделение, должны следовать за непробельным символом. Иначе эти <em>подчерки _не считаются</em> окончанием выделения и остаются просто символами подчерка.")]

        [TestCase("Подчерки, идущие больше двух раз ___ , не считаются выделением.",
            "Подчерки, идущие больше двух раз ___ , не считаются выделением.")]
        public void MD_ShouldRender_Specification(string markdown, string expected)
        {
            var md = new Md();

            var result = md.RenderToHtml(markdown);

            result.Should().Be(expected);

        }

    }
}